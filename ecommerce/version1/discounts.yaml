apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ecommerce
    tags.datadoghq.com/service: discounts
    tags.datadoghq.com/env: "development"
  name: discounts
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: discounts
      tags.datadoghq.com/env: "development"
      app: ecommerce
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        tags.datadoghq.com/service: discounts
        tags.datadoghq.com/env: "development"
        tags.datadoghq.com/version: "1.0" 
        app: ecommerce
    spec:
      containers:
      - image: arapulido/discounts_opentelemetry:latest
        name: discounts
        imagePullPolicy: Always
        command: ["opentelemetry-instrument"]
        args: ["--log_level=debug", "--traces_exporter=otlp_proto_http", "--metrics_exporter=otlp_proto_http", "python", "discounts.py"]
        env:
          - name: FLASK_APP
            value: "discounts.py"
          - name: FLASK_DEBUG
            value: "1"
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "service.name=discounts,deployment.environment=development,service.version=1.0"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pw
                name: db-password
          - name: POSTGRES_USER
            value: "user"
          - name: POSTGRES_HOST
            value: "db"
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://$(DD_AGENT_HOST):4318"
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: DD_ANALYTICS_ENABLED
            value: "true"
          - name: DD_PROFILING_ENABLED
            value: "true"
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
        ports:
        - containerPort: 5001
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    tags.datadoghq.com/service: discounts
    tags.datadoghq.com/env: development
    app: ecommerce
  name: discounts
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    tags.datadoghq.com/service: discounts
    tags.datadoghq.com/env: development
    app: ecommerce
  sessionAffinity: None
  type: ClusterIP
